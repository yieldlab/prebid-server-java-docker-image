name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OCI_REGISTRY: ghcr.io
      DOCKER_IMAGE_NAME: yieldlab/prebid-server-java

    steps:
    - name: Checkout repo under /my-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        path: my-repo

    - name: Extract version
      working-directory: ./my-repo
      run: |
        target_tag=$(cat latest-release-version)
        echo "TARGET_TAG=$target_tag" >> $GITHUB_ENV

    - name: Check if version has already been released
      working-directory: ./my-repo
      run: |
        if [ $(git tag -l $TARGET_TAG) ]
        then
          tag_existing="true"
          echo "Version $tag_existing already exists, further steps will be skipped."
        else
          tag_existing="false"
        fi
        
        echo "TAG_ALREADY_EXISTS=$tag_existing" >> $GITHUB_ENV

    - name: Checkout prebid-server-java under /prebid
      if: ${{ (env.TAG_ALREADY_EXISTS == 'false') }}
      uses: actions/checkout@v3
      with:
        repository: 'prebid/prebid-server-java'
        ref: ${{ env.TARGET_TAG }}
        path: prebid

    - name: Set up JDK 17
      if: ${{ (env.TAG_ALREADY_EXISTS == 'false') }}
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 17

    - name: Build application
      if: ${{ (env.TAG_ALREADY_EXISTS == 'false') }}
      working-directory: ./prebid
      run: ./mvnw --batch-mode -Dmaven.test.skip=true clean package

    - name: Log in to the container registry
      if: ${{ (env.TAG_ALREADY_EXISTS == 'false') }}
      uses: docker/login-action@v2
      with:
        registry: ${{ env.OCI_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push docker image
      if: ${{ (env.TAG_ALREADY_EXISTS == 'false') }}
      uses: docker/build-push-action@v4
      with:
        context: ./prebid
        # push image only on main branch
        push: ${{ (github.ref == 'refs/heads/main') }}
        tags: ${{ env.OCI_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TARGET_TAG }}

    - name: Add and push git tag
      if: ${{ (github.ref == 'refs/heads/main') && (env.TAG_ALREADY_EXISTS == 'false') }}
      working-directory: ./my-repo
      run: |
        git status
        git config user.name CI
        git config user.email "<>"
        git tag -a --message='Release version ${{ env.TARGET_TAG }}' '${{ env.TARGET_TAG }}'
        git checkout '${{ env.TARGET_TAG }}'
        git show
        git push origin tag -- '${{ env.TARGET_TAG }}'

    - name: Create GitHub release
      if: ${{ (github.ref == 'refs/heads/main') && (env.TAG_ALREADY_EXISTS == 'false') }}
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
        publish: true
        name: "Release ${{ env.TARGET_TAG }}"
        tag: ${{ env.TARGET_TAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
